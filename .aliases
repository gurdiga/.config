# vim: filetype=sh

alias gs='git status'
alias gsh='git show'
alias gd='git diff'
alias gds='git diff --staged'
alias gdn='git diff --stat'
alias ga='git add --all'
alias grh='git reset --hard'
alias gc='git commit -v'
alias gch='git checkout'
alias gl='git log --abbrev-commit'
alias gln='git log --abbrev-commit --stat'
alias glg='git log --graph --pretty=oneline --abbrev-commit'
alias gl1='git log --abbrev-commit --format=oneline'
alias push='git push'
alias pull='git pull'
alias v='~/vimp'
alias less='less -R'
alias j='jobs -l'
alias ff='google-chrome --user-data-dir=$HOME/.config/chrome.vlad & exit'
alias l='ls --full-time --time-style="+%Y-%m-%d %H:%M:%S" --group-directories-first -hlAF'
alias files='cut -d: -f1 | uniq'
alias encrypt='openssl enc -aes-256-cbc -e'
alias decrypt='openssl aes-256-cbc -d'
alias ding='mplayer /System/Library/Sounds/Glass.aiff'
alias node='env NODE_NO_READLINE=1 rlwrap node'
alias rewifi='networksetup -setairportpower en0 off && networksetup -setairportpower en0 on && sleep 3 && networksetup -getairportnetwork en0'

function www() { python -m SimpleHTTPServer ${1:-8888}; }
function jsonpp() { node -e "console.log(JSON.stringify(JSON.parse(require('fs').readFileSync('/dev/stdin').toString()), null, '  '));"; }
function q() { find "${2:-.}" -name $1; }

function f() {
  if [ "$#" -eq 0 ]; then
    echo 'Find what?'
    return 0
  fi

  DOT_FILE=".grepignore"
  MAX_LINE_LENGTH=300

  IGNORE_DIRS=".git .svn node_modules bower_components"
  IGNORE_FILES=".bash_history .viminfo"
  EXCLUDE_DIR_CLAUSE=""
  EXCLUDE_CLAUSE=""

  if [ -f $DOT_FILE ]; then
    IGNORE_DIRS+=" $(echo $(grep '/$' $DOT_FILE | sed 's|/$||'))"
    IGNORE_FILES+=" $(echo $(grep -v '/$' $DOT_FILE))"
  fi

  for DIR in $IGNORE_DIRS; do
    EXCLUDE_DIR_CLAUSE+=" --exclude-dir=$DIR"
  done

  for FILE in $IGNORE_FILES; do
    EXCLUDE_CLAUSE+=" --exclude=$FILE"
  done

  grep \
    --color=always \
    --line-number \
    --binary-files=without-match \
    --recursive \
    $EXCLUDE_CLAUSE \
    $EXCLUDE_DIR_CLAUSE "$@" \
    | cut -c -$MAX_LINE_LENGTH
}

# Breakout stuff
alias refreshdb='bundle exec rake db:drop db:create && mysql < db/test_structure.sql && rake db:seed'
alias br='cd ~/src/breakout'
alias s='bin/rails server puma --binding=0.0.0.0 --daemon'
alias c='bin/rails console'
alias ss='test -f tmp/pids/server.pid && kill -INT `cat tmp/pids/server.pid` && rm -f log/*.log'
alias migrate='bundle exec rake db:migrate && ( mysqldump breakout_development --routines; mysqldump breakout_development -c --extended-insert=FALSE schema_migrations; ) | mysql breakout_test'

alias stripcolor='sed -r "s:\x1B\[[0-9;]*[mK]::g"'
